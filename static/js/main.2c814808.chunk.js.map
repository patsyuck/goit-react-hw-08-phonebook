{"version":3,"sources":["redux/authorization/authorizationActions.js","redux/contacts/contactsActions.js","components/Loader/Loader.js","redux/authorization/authorizationSelectors.js","components/Menu/Navigation.js","components/Menu/mine.jpg","components/Menu/UserMenu.js","components/Menu/Authorization.js","components/Menu/Menu.js","components/Menu/PrivateRoute.js","components/Menu/PublicRoute.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["token","axios","defaults","headers","common","Authorization","userRegister","createAction","userLogin","userLogout","getUser","authRequest","authSuccess","authError","logoutError","postRegistration","credentials","dispatch","post","then","res","data","catch","error","postLogin","postLogout","getCurrentUser","getState","persistedToken","persistedReducer","get","addContact","updateContact","deleteContact","filterContacts","getData","fetchRequest","fetchSuccess","fetchError","postContact","newContact","getContacts","deleteExistContact","id","delete","patchContact","patch","MyLoader","type","color","height","width","Component","getAuthorization","state","isLogin","getName","user","name","styles","link","display","textDecoration","padding","fontWeight","activeLink","connect","isAuthorized","to","exact","style","activeStyle","avatar","image","onLogout","className","src","alt","onClick","component","routeProps","render","props","restricted","HomePage","lazy","LoginPage","RegisterPage","ContactsPage","App","this","onRefresh","fallback","path","mapDispatchToProps","initialState","isProcessing","contacts","filter","isFetching","reducer","createReducer","payload","item","target","value","console","log","message","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","storage","whitelist","persistReducer","store","configureStore","persistor","persistStore","ReactDOM","StrictMode","bigStore","loading","document","getElementById"],"mappings":"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","file":"static/js/main.2c814808.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n/*axios.defaults.baseUrl = 'https://connections-api.herokuapp.com'*/\n\nconst token = {\n    set(token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`\n    },\n    unset() {\n        axios.defaults.headers.common.Authorization = ''\n    }\n}\n\nexport const userRegister = createAction('USER_REGISTER')\nexport const userLogin = createAction('USER_LOGIN')\nexport const userLogout = createAction('USER_LOGOUT')\nexport const getUser = createAction('GET_CURRENT_USER')\nexport const authRequest = createAction('AUTH/REQUEST')\nexport const authSuccess = createAction('AUTH/SUCCESS')\nexport const authError = createAction('AUTH/ERROR')\nexport const logoutError = createAction('LOGOUT/ERROR')\n\nexport const postRegistration = credentials => dispatch => {\n    dispatch(authRequest())\n    axios.post('https://connections-api.herokuapp.com/users/signup', credentials)\n        .then((res) => {\n            dispatch(authSuccess())\n            token.set(res.data.token)\n            dispatch(userRegister(res.data))\n        })\n        .catch((error) => {\n            dispatch(authError(error))\n        })\n}\n\nexport const postLogin = credentials => dispatch => {\n    dispatch(authRequest())\n    axios.post('https://connections-api.herokuapp.com/users/login', credentials)\n        .then((res) => {\n            dispatch(authSuccess())\n            token.set(res.data.token)\n            dispatch(userLogin(res.data))\n        })\n        .catch((error) => {\n            dispatch(authError(error))\n        })\n}\n\nexport const postLogout = () => dispatch => {\n    dispatch(authRequest())\n    axios.post('https://connections-api.herokuapp.com/users/logout')\n        .then(() => {\n            dispatch(authSuccess())\n            token.unset()\n            dispatch(userLogout())\n        })\n        .catch((error) => {\n            dispatch(logoutError(error))\n        })\n}\n\nexport const getCurrentUser = () => (dispatch, getState) => {\n    const persistedToken = getState().persistedReducer.token\n    if (!persistedToken) {\n        return\n    }\n    token.set(persistedToken)\n    dispatch(authRequest())\n    axios.get('https://connections-api.herokuapp.com/users/current')\n        .then((res) => {\n            dispatch(authSuccess())\n            dispatch(getUser(res.data))\n        })\n        .catch((error) => {\n            dispatch(authError(error))\n        })\n}","import { createAction } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const addContact = createAction('ADD_CONTACT');\nexport const updateContact = createAction('UPDATE_CONTACT');\nexport const deleteContact = createAction('DELETE_CONTACT');\nexport const filterContacts = createAction('FILTER_CONTACTS');\nexport const getData = createAction('GET_DATA')\nexport const fetchRequest = createAction('API/REQUEST')\nexport const fetchSuccess = createAction('API/SUCCESS')\nexport const fetchError = createAction('API/ERROR')\n\nexport const postContact = newContact => dispatch => {\n    dispatch(fetchRequest())\n    axios.post('https://connections-api.herokuapp.com/contacts', newContact)\n        .then(() => {\n            dispatch(fetchSuccess())\n            dispatch(addContact(newContact))\n        })\n        .catch((error) => {\n            dispatch(fetchError(error))\n        })\n}\n\nexport const getContacts = () => dispatch => {\n    dispatch(fetchRequest())\n    axios.get('https://connections-api.herokuapp.com/contacts')\n        .then((data) => {\n            dispatch(fetchSuccess())\n            dispatch(getData(data))\n        })\n        .catch((error) => {\n            dispatch(fetchError(error))\n        })\n}\n\nexport const deleteExistContact = id => dispatch => {\n    dispatch(fetchRequest())\n    axios.delete(`https://connections-api.herokuapp.com/contacts/${id}`)\n        .then(() => {\n            dispatch(fetchSuccess())\n            dispatch(deleteContact(id))\n        })\n        .catch((error) => {\n            dispatch(fetchError(error))\n        })\n}\n\nexport const patchContact = (id, newContact) => dispatch => {\n    dispatch(fetchRequest())\n    axios.patch(`https://connections-api.herokuapp.com/contacts/${id}`, newContact)\n        .then((res) => {\n            dispatch(fetchSuccess())\n            dispatch(updateContact(res.data))\n        })\n        .catch((error) => {\n            dispatch(fetchError(error))\n        })\n}\n","import React, { Component } from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\n\nexport class MyLoader extends Component {\n  render() {\n    return (\n      <Loader\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={500}\n        width={500}\n        /*timeout={3000}*/\n      />\n    );\n  }\n}\n","export const getAuthorization = state => state.persistedReducer.isLogin\nexport const getName = state => (state.persistedReducer.user ? state.persistedReducer.user.name : '')","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { getAuthorization } from '../../redux/authorization/authorizationSelectors'\n\nconst styles = {\n    link: {\n        display: 'inline-block',\n        textDecoration: 'none',\n        padding: 12,\n        fontWeight: 700,\n        color: 'black'\n    },\n    activeLink: {\n        color: 'red'\n    }\n}\n\nconst Navigation = ({ isAuthorized }) => {\n    return (\n        <div>\n            <NavLink\n                to=\"/\" exact\n                style={styles.link}\n                activeStyle={styles.activeLink}\n            >\n                Home\n            </NavLink>\n            {isAuthorized && (\n                <NavLink\n                    to=\"/contacts\" exact\n                    style={styles.link}\n                    activeStyle={styles.activeLink}\n                >\n                    Contacts\n                </NavLink>\n            )}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthorized: getAuthorization(state)\n  };\n};\n\nexport default connect(mapStateToProps, null)(Navigation)","export default __webpack_public_path__ + \"static/media/mine.e8c87480.jpg\";","import React from 'react'\nimport { connect } from 'react-redux'\nimport { postLogout } from '../../redux/authorization/authorizationActions'\nimport { getName } from '../../redux/authorization/authorizationSelectors'\nimport './Menu.css'\nimport image from './mine.jpg'\n\nconst UserMenu = ({ avatar, name, onLogout }) => {\n    return (\n        <div className=\"menuUser\">\n            <img className=\"userImage\" src={avatar} alt=\"\" width=\"32\"/>\n            <span className=\"userName\">Welcome, {name}</span>\n            <button type=\"button\" onClick={onLogout}>\n                Logout\n            </button>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n  return {\n    name: getName(state),\n    avatar: image\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogout: () => dispatch(postLogout())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu)","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst styles = {\n    link: {\n        display: 'inline-block',\n        textDecoration: 'none',\n        padding: 12,\n        fontWeight: 700,\n        color: 'black'\n    },\n    activeLink: {\n        color: 'red'\n    }\n}\n\nconst Authorization = () => {\n    return (\n        <div>\n            <NavLink\n                to=\"/register\" exact\n                style={styles.link}\n                activeStyle={styles.activeLink}\n            >\n                Registration\n            </NavLink>\n            <NavLink\n                to=\"/login\" exact\n                style={styles.link}\n                activeStyle={styles.activeLink}\n            >\n                Login\n            </NavLink>\n        </div>\n    )\n}\n\nexport default Authorization","import React from 'react'\nimport { connect } from 'react-redux'\nimport Navigation from './Navigation'\nimport UserMenu from './UserMenu'\nimport Authorization from './Authorization'\nimport {getAuthorization} from '../../redux/authorization/authorizationSelectors'\nimport './Menu.css'\n\nconst Menu = ({ isAuthorized }) => {\n    return (\n        <header className=\"menuHeader\">\n            <Navigation />\n            {isAuthorized ? <UserMenu /> : <Authorization />}\n        </header>\n    )\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthorized: getAuthorization(state)\n  };\n};\n\nexport default connect(mapStateToProps, null)(Menu)","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getAuthorization } from '../../redux/authorization/authorizationSelectors'\n\nconst PrivateRoute = ({\n    component: Component,\n    isAuthorized,\n    ...routeProps\n}) => {\n    return (\n        <Route {...routeProps} render={props =>\n            isAuthorized ? <Component {...props} /> : <Redirect to=\"/login\" />\n        }\n        />\n    )\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthorized: getAuthorization(state)\n  };\n};\n\nexport default connect(mapStateToProps, null)(PrivateRoute)","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getAuthorization } from '../../redux/authorization/authorizationSelectors'\n\nconst PublicRoute = ({\n    component: Component,\n    isAuthorized,\n    ...routeProps\n}) => {\n    return (\n        <Route {...routeProps} render={props =>\n            isAuthorized && routeProps.restricted ? <Redirect to=\"/contacts\" /> : <Component {...props} />\n        }\n        />\n    )\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthorized: getAuthorization(state)\n  };\n};\n\nexport default connect(mapStateToProps, null)(PublicRoute)","import React, { Component, Suspense, lazy } from 'react';\nimport { connect } from 'react-redux';\nimport {BrowserRouter as Router, Switch, Redirect} from 'react-router-dom';\nimport { MyLoader } from './components/Loader';\nimport Menu from './components/Menu/Menu';\nimport {getCurrentUser} from './redux/authorization/authorizationActions'\nimport PrivateRoute from './components/Menu/PrivateRoute';\nimport PublicRoute from './components/Menu/PublicRoute';\n\nconst HomePage = lazy(() => import('./components/Pages/HomePage')) /* webpackChunkName: \"home-page\" */\nconst LoginPage = lazy(() => import('./components/Pages/LoginPage')) /* webpackChunkName: \"login-page\" */\nconst RegisterPage = lazy(() => import('./components/Pages/RegisterPage')) /* webpackChunkName: \"register-page\" */\nconst ContactsPage = lazy(() => import('./components/Pages/ContactsPage')) /* webpackChunkName: \"contacts-page\" */\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onRefresh()\n  }\n  \n  render() {\n    return (\n      <div>\n        <Router>\n          <Menu />\n          <Suspense fallback={<MyLoader />}>\n            <Switch>\n              <PublicRoute path=\"/\" exact component={HomePage} />\n              <PublicRoute path=\"/register\" component={RegisterPage} restricted />\n              <PublicRoute path=\"/login\" component={LoginPage} restricted />\n              <PrivateRoute path=\"/contacts\" component={ContactsPage} />\n              <Redirect to=\"/\" />\n            </Switch>\n          </Suspense>\n        </Router>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = {\n    onRefresh: getCurrentUser\n}\n\nexport default connect(null, mapDispatchToProps)(App);","import { createReducer } from '@reduxjs/toolkit';\nimport { addContact, updateContact, deleteContact, filterContacts, getData, fetchRequest, fetchSuccess, fetchError } from './contacts/contactsActions';\nimport {userRegister, userLogin, userLogout, getUser, authRequest, authSuccess, authError, logoutError} from './authorization/authorizationActions';\n\nconst initialState = {\n  user: null,\n  token: null,\n  isLogin: false,\n  isProcessing: false,\n  authError: null,\n  contacts: [],\n  filter: '',\n  isFetching: false,\n  fetchError: null\n};\n\nconst reducer = createReducer(initialState, {\n  [userRegister]: (state, { payload }) => ({\n    ...state,\n    user: payload.user,\n    token: payload.token,\n    isLogin: true\n  }),\n  [userLogin]: (state, { payload }) => ({\n    ...state,\n    user: payload.user,\n    token: payload.token,\n    isLogin: true\n  }),\n  [userLogout]: () => initialState,\n  [getUser]: (state, { payload }) => ({\n    ...state,\n    user: payload,\n    isLogin: true\n  }),\n  [getData]: (state, { payload }) => ({\n    ...state,\n    contacts: payload.data\n  }),\n  [addContact]: (state, { payload }) => ({\n    ...state,\n    contacts: [...state.contacts, payload]\n    }),\n    [updateContact]: (state, { payload } ) => ({\n        ...state,\n        contacts: [...state.contacts.filter(item => item.id !== payload.id), payload]\n    }),\n  [deleteContact]: (state, { payload }) => ({\n    ...state,\n    contacts: state.contacts.filter(item => item.id !== payload)\n  }),\n  [filterContacts]: (state, { payload }) => ({\n    ...state,\n    filter: payload.target.value,\n  }),\n  [fetchRequest]: (state) => ({\n    ...state,\n    isFetching: true\n  }),\n  [fetchSuccess]: (state) => ({\n    ...state,\n    isFetching: false\n  }),\n  [fetchError]: (state, { payload }) => {\n    console.log(payload.message)\n    return {\n      ...state,\n      isFetching: false,\n      fetchError: payload.message\n    }\n  },\n  [authRequest]: (state) => ({\n    ...state,\n    isProcessing: true\n  }),\n  [authSuccess]: (state) => ({\n    ...state,\n    isProcessing: false\n  }),\n  [authError]: (state, { payload }) => {\n    console.log(payload.message)\n    return {\n      ...state,\n      isProcessing: false,\n      authError: payload.message,\n      isLogin: false\n    }\n  },\n  [logoutError]: (state, { payload }) => {\n    console.log(payload.message)\n    return {\n      ...state,\n      isProcessing: false,\n      authError: payload.message\n    }\n  }\n});\n\nexport default reducer","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage';\nimport reducer from './reducer'\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n]\n\nconst persistConfig = {\n  key: 'repeta',\n  storage,\n  whitelist: ['token']\n}\n\nconst persistedReducer = persistReducer(persistConfig, reducer)\n\nconst store = configureStore({\n  reducer: {\n    persistedReducer,\n  },\n  middleware,\n  /*devTools: process.env.NODE_ENV === 'development'*/\n});\n\nconst persistor = persistStore(store)\n\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport bigStore from './redux/store';\nimport {PersistGate} from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={bigStore.store}>\n      <PersistGate loading={null} persistor={bigStore.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}